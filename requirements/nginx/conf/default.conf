upstream fastcgi_backend {
  server PHP_HOST:PHP_PORT;
}

server {
    listen 80;
    server_name SERVER_NAME;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name SERVER_NAME;

    ssl_certificate     SSL_CRT;
    ssl_certificate_key SSL_KEY;

    root /var/www/html/pub;
    index index.php;

    access_log /var/log/nginx/app-access.log;
    error_log /var/log/nginx/app-error.log;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass fastcgi_backend;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS on;
        fastcgi_buffers 32 32k;
        fastcgi_buffer_size 64k;
    }

    location /static/ {
        # Remove signature of the static files that is used to overcome the browser cache
        location ~ ^/static/version\d*/ {
            rewrite ^/static/version\d*/(.*)$ /static/$1 last;
        }

        location ~* \.(ico|jpg|jpeg|png|gif|svg|svgz|webp|avif|avifs|js|css|eot|ttf|otf|woff|woff2|html|json|webmanifest)$ {
            add_header Cache-Control "public";
            add_header X-Frame-Options "SAMEORIGIN";
            expires +1y;

            if (!-f $request_filename) {
                rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
            }
        }
        location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
            add_header Cache-Control "no-store";
            add_header X-Frame-Options "SAMEORIGIN";
            expires    off;

            if (!-f $request_filename) {
               rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
            }
        }
        if (!-f $request_filename) {
            rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
        }
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /media/ {
        ## The following section allows to offload image resizing from Magento instance to the Nginx.
        ## Catalog image URL format should be set accordingly.
        ## See https://docs.magento.com/user-guide/configuration/general/web.html#url-options
        #   location ~* ^/media/catalog/.* {
        #
        #       # Replace placeholders and uncomment the line below to serve product images from public S3
        #       # See examples of S3 authentication at https://github.com/anomalizer/ngx_aws_auth
        #       # resolver 8.8.8.8;
        #       # proxy_pass https://<bucket-name>.<region-name>.amazonaws.com;
        #
        #       set $width "-";
        #       set $height "-";
        #       if ($arg_width != '') {
        #           set $width $arg_width;
        #       }
        #       if ($arg_height != '') {
        #           set $height $arg_height;
        #       }
        #       image_filter resize $width $height;
        #       image_filter_jpeg_quality 90;
        #   }

        try_files $uri $uri/ /get.php$is_args$args;

        location ~ ^/media/theme_customization/.*\.xml {
            deny all;
        }

        location ~* \.(ico|jpg|jpeg|png|gif|svg|svgz|webp|avif|avifs|js|css|eot|ttf|otf|woff|woff2)$ {
            add_header Cache-Control "public";
            add_header X-Frame-Options "SAMEORIGIN";
            expires +1y;
            try_files $uri $uri/ /get.php$is_args$args;
        }
        location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
            add_header Cache-Control "no-store";
            add_header X-Frame-Options "SAMEORIGIN";
            expires    off;
            try_files $uri $uri/ /get.php$is_args$args;
        }
        add_header X-Frame-Options "SAMEORIGIN";
    }
}

